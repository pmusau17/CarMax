<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20203.20.0801.1333                               -->
<workbook original-version='18.1' source-build='2020.3.0 (20203.20.0801.1333)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='top 5 makes' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='5'>
        <calculation class='tableau' formula='5' />
        <range max='100' min='1' />
      </column>
    </datasource>
    <datasource caption='cmdata (carmax)' inline='true' name='federated.0ec9qy20x0o2vz1dbagfx0ez3lmh' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='mysql.02dqbcz0tqpqur1e00gs91n37795'>
            <connection class='mysql' dbname='carmax' odbc-native-protocol='' one-time-sql='' port='3306' server='localhost' source-charset='' username='root' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='mysql.02dqbcz0tqpqur1e00gs91n37795' name='cmdata' table='[cmdata]' type='table' />
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='mysql.02dqbcz0tqpqur1e00gs91n37795' name='cmdata' table='[cmdata]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>dataKey</remote-name>
            <remote-type>3</remote-type>
            <local-name>[dataKey]</local-name>
            <parent-name>[cmdata]</parent-name>
            <remote-alias>dataKey</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cmdata_6ADB199AD55D45218026352326604EC2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer_ID</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Customer_ID]</local-name>
            <parent-name>[cmdata]</parent-name>
            <remote-alias>Customer_ID</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cmdata_6ADB199AD55D45218026352326604EC2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Make</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Make]</local-name>
            <parent-name>[cmdata]</parent-name>
            <remote-alias>Make</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>13</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cmdata_6ADB199AD55D45218026352326604EC2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Model</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Model]</local-name>
            <parent-name>[cmdata]</parent-name>
            <remote-alias>Model</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>22</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cmdata_6ADB199AD55D45218026352326604EC2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Model_Year</remote-name>
            <remote-type>2</remote-type>
            <local-name>[Model_Year]</local-name>
            <parent-name>[cmdata]</parent-name>
            <remote-alias>Model_Year</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>5</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_SMALLINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SSHORT&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cmdata_6ADB199AD55D45218026352326604EC2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>purchase_price</remote-name>
            <remote-type>130</remote-type>
            <local-name>[purchase_price]</local-name>
            <parent-name>[cmdata]</parent-name>
            <remote-alias>purchase_price</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>13</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cmdata_6ADB199AD55D45218026352326604EC2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>trade_in</remote-name>
            <remote-type>17</remote-type>
            <local-name>[trade_in]</local-name>
            <parent-name>[cmdata]</parent-name>
            <remote-alias>trade_in</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>3</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TINYINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_UTINYINT&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cmdata_6ADB199AD55D45218026352326604EC2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>vehicle_financing</remote-name>
            <remote-type>17</remote-type>
            <local-name>[vehicle_financing]</local-name>
            <parent-name>[cmdata]</parent-name>
            <remote-alias>vehicle_financing</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>3</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TINYINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_UTINYINT&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cmdata_6ADB199AD55D45218026352326604EC2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customer_age</remote-name>
            <remote-type>130</remote-type>
            <local-name>[customer_age]</local-name>
            <parent-name>[cmdata]</parent-name>
            <remote-alias>customer_age</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>8</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cmdata_6ADB199AD55D45218026352326604EC2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customer_income</remote-name>
            <remote-type>130</remote-type>
            <local-name>[customer_income]</local-name>
            <parent-name>[cmdata]</parent-name>
            <remote-alias>customer_income</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>15</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cmdata_6ADB199AD55D45218026352326604EC2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customer_gender</remote-name>
            <remote-type>130</remote-type>
            <local-name>[customer_gender]</local-name>
            <parent-name>[cmdata]</parent-name>
            <remote-alias>customer_gender</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>1</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cmdata_6ADB199AD55D45218026352326604EC2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customer_previous_purchase</remote-name>
            <remote-type>17</remote-type>
            <local-name>[customer_previous_purchase]</local-name>
            <parent-name>[cmdata]</parent-name>
            <remote-alias>customer_previous_purchase</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>3</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TINYINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_UTINYINT&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cmdata_6ADB199AD55D45218026352326604EC2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Distance</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Distance]</local-name>
            <parent-name>[cmdata]</parent-name>
            <remote-alias>Distance</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>4</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cmdata_6ADB199AD55D45218026352326604EC2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Satisfaction</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Satisfaction]</local-name>
            <parent-name>[cmdata]</parent-name>
            <remote-alias>Satisfaction</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cmdata_6ADB199AD55D45218026352326604EC2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>vehicle_warranty_used</remote-name>
            <remote-type>17</remote-type>
            <local-name>[vehicle_warranty_used]</local-name>
            <parent-name>[cmdata]</parent-name>
            <remote-alias>vehicle_warranty_used</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>3</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TINYINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_UTINYINT&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cmdata_6ADB199AD55D45218026352326604EC2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>subsequent_purchases</remote-name>
            <remote-type>17</remote-type>
            <local-name>[subsequent_purchases]</local-name>
            <parent-name>[cmdata]</parent-name>
            <remote-alias>subsequent_purchases</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>3</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TINYINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_UTINYINT&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cmdata_6ADB199AD55D45218026352326604EC2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Customer ID' datatype='integer' name='[Customer_ID]' role='dimension' type='ordinal' />
      <column caption='Model Year' datatype='integer' name='[Model_Year]' role='dimension' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='cmdata' datatype='table' name='[__tableau_internal_object_id__].[cmdata_6ADB199AD55D45218026352326604EC2]' role='measure' type='quantitative' />
      <column caption='Customer Age' datatype='string' name='[customer_age]' role='dimension' type='nominal' />
      <column caption='Customer Gender' datatype='string' name='[customer_gender]' role='dimension' type='nominal' />
      <column caption='Customer Income' datatype='string' name='[customer_income]' role='dimension' type='nominal' />
      <column caption='Customer Previous Purchase' datatype='integer' name='[customer_previous_purchase]' role='measure' type='quantitative' />
      <column caption='Data Key' datatype='integer' name='[dataKey]' role='dimension' type='ordinal' />
      <column caption='Purchase Price' datatype='string' name='[purchase_price]' role='dimension' type='nominal' />
      <column caption='Subsequent Purchases' datatype='integer' name='[subsequent_purchases]' role='measure' type='quantitative' />
      <column caption='Trade In' datatype='integer' name='[trade_in]' role='measure' type='quantitative' />
      <column caption='Vehicle Financing' datatype='integer' name='[vehicle_financing]' role='measure' type='quantitative' />
      <column caption='Vehicle Warranty Used' datatype='integer' name='[vehicle_warranty_used]' role='measure' type='quantitative' />
      <column-instance column='[purchase_price]' derivation='None' name='[none:purchase_price:nk]' pivot='key' type='nominal' />
      <column-instance column='[subsequent_purchases]' derivation='Sum' name='[sum:subsequent_purchases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[trade_in]' derivation='Sum' name='[sum:trade_in:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:purchase_price:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;45001 - 50000&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;5001 - 10000&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;25001 - 30000&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;65001 - 70000&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;50001 - 55000&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;30001 - 35000&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;10001 - 15000&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;35001 - 40000&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;70001 - 75000&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;75001 - 80000&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;55001 - 60000&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;40001 - 45000&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;15001 - 20000&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;85001 - 90000&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;60001 - 65000&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;20001 - 25000&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#2ca02c'>
              <bucket>&quot;[federated.0ec9qy20x0o2vz1dbagfx0ez3lmh].[sum:trade_in:qk]&quot;</bucket>
            </map>
            <map to='#f4d166'>
              <bucket>&quot;[federated.0ec9qy20x0o2vz1dbagfx0ez3lmh].[sum:subsequent_purchases:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='cmdata' id='cmdata_6ADB199AD55D45218026352326604EC2'>
            <properties context=''>
              <relation connection='mysql.02dqbcz0tqpqur1e00gs91n37795' name='cmdata' table='[cmdata]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Purchases by income' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Purchase Price' />
        <param name='target' value='Purchases by income' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Extra purchases'>
      <table>
        <view>
          <datasources>
            <datasource caption='cmdata (carmax)' name='federated.0ec9qy20x0o2vz1dbagfx0ez3lmh' />
          </datasources>
          <datasource-dependencies datasource='federated.0ec9qy20x0o2vz1dbagfx0ez3lmh'>
            <column-instance column='[customer_previous_purchase]' derivation='Count' name='[cnt:customer_previous_purchase:qk]' pivot='key' type='quantitative' />
            <column-instance column='[vehicle_financing]' derivation='Count' name='[cnt:vehicle_financing:qk]' pivot='key' type='quantitative' />
            <column caption='Customer Gender' datatype='string' name='[customer_gender]' role='dimension' type='nominal' />
            <column caption='Customer Previous Purchase' datatype='integer' name='[customer_previous_purchase]' role='measure' type='quantitative' />
            <column-instance column='[customer_gender]' derivation='None' name='[none:customer_gender:nk]' pivot='key' type='nominal' />
            <column caption='Subsequent Purchases' datatype='integer' name='[subsequent_purchases]' role='measure' type='quantitative' />
            <column-instance column='[subsequent_purchases]' derivation='Sum' name='[sum:subsequent_purchases:qk]' pivot='key' type='quantitative' />
            <column caption='Vehicle Financing' datatype='integer' name='[vehicle_financing]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0ec9qy20x0o2vz1dbagfx0ez3lmh].[sum:subsequent_purchases:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0ec9qy20x0o2vz1dbagfx0ez3lmh].[cnt:customer_previous_purchase:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0ec9qy20x0o2vz1dbagfx0ez3lmh].[cnt:vehicle_financing:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.0ec9qy20x0o2vz1dbagfx0ez3lmh].[sum:subsequent_purchases:qk] + ([federated.0ec9qy20x0o2vz1dbagfx0ez3lmh].[cnt:customer_previous_purchase:qk] + [federated.0ec9qy20x0o2vz1dbagfx0ez3lmh].[cnt:vehicle_financing:qk]))</rows>
        <cols>[federated.0ec9qy20x0o2vz1dbagfx0ez3lmh].[none:customer_gender:nk]</cols>
      </table>
      <simple-id uuid='{640CB31C-05E2-4461-92B2-1113AAE2B599}' />
    </worksheet>
    <worksheet name='Financing'>
      <table>
        <view>
          <datasources>
            <datasource caption='cmdata (carmax)' name='federated.0ec9qy20x0o2vz1dbagfx0ez3lmh' />
          </datasources>
          <datasource-dependencies datasource='federated.0ec9qy20x0o2vz1dbagfx0ez3lmh'>
            <column caption='Customer Age' datatype='string' name='[customer_age]' role='dimension' type='nominal' />
            <column caption='Customer Income' datatype='string' name='[customer_income]' role='dimension' type='nominal' />
            <column-instance column='[customer_age]' derivation='None' name='[none:customer_age:nk]' pivot='key' type='nominal' />
            <column-instance column='[customer_income]' derivation='None' name='[none:customer_income:nk]' pivot='key' type='nominal' />
            <column-instance column='[purchase_price]' derivation='None' name='[none:purchase_price:nk]' pivot='key' type='nominal' />
            <column caption='Purchase Price' datatype='string' name='[purchase_price]' role='dimension' type='nominal' />
            <column-instance column='[vehicle_financing]' derivation='Sum' name='[sum:vehicle_financing:qk]' pivot='key' type='quantitative' />
            <column caption='Vehicle Financing' datatype='integer' name='[vehicle_financing]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ec9qy20x0o2vz1dbagfx0ez3lmh].[none:customer_income:nk]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:customer_income:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:customer_income:nk]' member='&quot;?&quot;' />
                <groupfilter function='member' level='[none:customer_income:nk]' member='&quot;0 - 20000&quot;' />
                <groupfilter function='member' level='[none:customer_income:nk]' member='&quot;100001 - 120000&quot;' />
                <groupfilter function='member' level='[none:customer_income:nk]' member='&quot;120001 - 140000&quot;' />
                <groupfilter function='member' level='[none:customer_income:nk]' member='&quot;140001 - 160000&quot;' />
                <groupfilter function='member' level='[none:customer_income:nk]' member='&quot;160001 - 180000&quot;' />
                <groupfilter function='member' level='[none:customer_income:nk]' member='&quot;180001 - 200000&quot;' />
                <groupfilter function='member' level='[none:customer_income:nk]' member='&quot;200001+&quot;' />
                <groupfilter function='member' level='[none:customer_income:nk]' member='&quot;20001 - 40000&quot;' />
                <groupfilter function='member' level='[none:customer_income:nk]' member='&quot;60001 - 80000&quot;' />
                <groupfilter function='member' level='[none:customer_income:nk]' member='&quot;80001 - 100000&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0ec9qy20x0o2vz1dbagfx0ez3lmh].[none:purchase_price:nk]'>
            <groupfilter count='3' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([purchase_price])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:purchase_price:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0ec9qy20x0o2vz1dbagfx0ez3lmh].[none:purchase_price:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0ec9qy20x0o2vz1dbagfx0ez3lmh].[sum:vehicle_financing:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0ec9qy20x0o2vz1dbagfx0ez3lmh].[sum:vehicle_financing:qk]' x-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.0ec9qy20x0o2vz1dbagfx0ez3lmh].[none:customer_age:nk] / ([federated.0ec9qy20x0o2vz1dbagfx0ez3lmh].[none:customer_income:nk] / [federated.0ec9qy20x0o2vz1dbagfx0ez3lmh].[none:purchase_price:nk]))</rows>
        <cols>([federated.0ec9qy20x0o2vz1dbagfx0ez3lmh].[sum:vehicle_financing:qk] + [federated.0ec9qy20x0o2vz1dbagfx0ez3lmh].[sum:vehicle_financing:qk])</cols>
      </table>
      <simple-id uuid='{5AC1B4B8-62EB-4959-9F35-89C1180D4889}' />
    </worksheet>
    <worksheet name='Gender-Age-Income'>
      <table>
        <view>
          <datasources>
            <datasource caption='cmdata (carmax)' name='federated.0ec9qy20x0o2vz1dbagfx0ez3lmh' />
          </datasources>
          <datasource-dependencies datasource='federated.0ec9qy20x0o2vz1dbagfx0ez3lmh'>
            <column-instance column='[customer_gender]' derivation='Count' name='[cnt:customer_gender:qk]' pivot='key' type='quantitative' />
            <column caption='Customer Age' datatype='string' name='[customer_age]' role='dimension' type='nominal' />
            <column caption='Customer Gender' datatype='string' name='[customer_gender]' role='dimension' type='nominal' />
            <column caption='Customer Income' datatype='string' name='[customer_income]' role='dimension' type='nominal' />
            <column-instance column='[customer_age]' derivation='None' name='[none:customer_age:nk]' pivot='key' type='nominal' />
            <column-instance column='[customer_gender]' derivation='None' name='[none:customer_gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[customer_income]' derivation='None' name='[none:customer_income:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.0ec9qy20x0o2vz1dbagfx0ez3lmh].[none:customer_gender:nk] / ([federated.0ec9qy20x0o2vz1dbagfx0ez3lmh].[none:customer_age:nk] / [federated.0ec9qy20x0o2vz1dbagfx0ez3lmh].[none:customer_income:nk]))</rows>
        <cols>[federated.0ec9qy20x0o2vz1dbagfx0ez3lmh].[cnt:customer_gender:qk]</cols>
      </table>
      <simple-id uuid='{3421C3C9-3AB1-4AA8-B4EB-CA4BF96570B5}' />
    </worksheet>
    <worksheet name='Popular Purchases'>
      <table>
        <view>
          <datasources>
            <datasource caption='cmdata (carmax)' name='federated.0ec9qy20x0o2vz1dbagfx0ez3lmh' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='top 5 makes' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='5'>
              <calculation class='tableau' formula='5' />
              <range max='100' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0ec9qy20x0o2vz1dbagfx0ez3lmh'>
            <column datatype='string' name='[Make]' role='dimension' type='nominal' />
            <column datatype='string' name='[Model]' role='dimension' type='nominal' />
            <column-instance column='[customer_gender]' derivation='Count' name='[cnt:customer_gender:qk]' pivot='key' type='quantitative' />
            <column caption='Customer Gender' datatype='string' name='[customer_gender]' role='dimension' type='nominal' />
            <column caption='Customer Income' datatype='string' name='[customer_income]' role='dimension' type='nominal' />
            <column-instance column='[Model]' derivation='Max' name='[max:Model:nk]' pivot='key' type='nominal' />
            <column-instance column='[Make]' derivation='None' name='[none:Make:nk]' pivot='key' type='nominal' />
            <column-instance column='[customer_gender]' derivation='None' name='[none:customer_gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[customer_income]' derivation='None' name='[none:customer_income:nk]' pivot='key' type='nominal' />
            <column-instance column='[purchase_price]' derivation='None' name='[none:purchase_price:nk]' pivot='key' type='nominal' />
            <column caption='Purchase Price' datatype='string' name='[purchase_price]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ec9qy20x0o2vz1dbagfx0ez3lmh].[none:Make:nk]'>
            <groupfilter count='[Parameters].[Parameter 1]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([Make])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Make:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0ec9qy20x0o2vz1dbagfx0ez3lmh].[none:Make:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0ec9qy20x0o2vz1dbagfx0ez3lmh].[none:customer_gender:nk]' value='84' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0ec9qy20x0o2vz1dbagfx0ez3lmh].[cnt:customer_gender:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0ec9qy20x0o2vz1dbagfx0ez3lmh].[cnt:customer_gender:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0ec9qy20x0o2vz1dbagfx0ez3lmh].[none:customer_income:nk] / ([federated.0ec9qy20x0o2vz1dbagfx0ez3lmh].[none:purchase_price:nk] / ([federated.0ec9qy20x0o2vz1dbagfx0ez3lmh].[none:Make:nk] / [federated.0ec9qy20x0o2vz1dbagfx0ez3lmh].[max:Model:nk])))</rows>
        <cols>[federated.0ec9qy20x0o2vz1dbagfx0ez3lmh].[none:customer_gender:nk]</cols>
      </table>
      <simple-id uuid='{72517A5E-C5E7-40A1-A556-4778D2A621B9}' />
    </worksheet>
    <worksheet name='Purchases by income'>
      <table>
        <view>
          <datasources>
            <datasource caption='cmdata (carmax)' name='federated.0ec9qy20x0o2vz1dbagfx0ez3lmh' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='top 5 makes' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='5'>
              <calculation class='tableau' formula='5' />
              <range max='100' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0ec9qy20x0o2vz1dbagfx0ez3lmh'>
            <column datatype='string' name='[Make]' role='dimension' type='nominal' />
            <column-instance column='[customer_gender]' derivation='Count' name='[cnt:customer_gender:qk]' pivot='key' type='quantitative' />
            <column caption='Customer Gender' datatype='string' name='[customer_gender]' role='dimension' type='nominal' />
            <column caption='Customer Income' datatype='string' name='[customer_income]' role='dimension' type='nominal' />
            <column-instance column='[Make]' derivation='None' name='[none:Make:nk]' pivot='key' type='nominal' />
            <column-instance column='[customer_gender]' derivation='None' name='[none:customer_gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[customer_income]' derivation='None' name='[none:customer_income:nk]' pivot='key' type='nominal' />
            <column-instance column='[purchase_price]' derivation='None' name='[none:purchase_price:nk]' pivot='key' type='nominal' />
            <column caption='Purchase Price' datatype='string' name='[purchase_price]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ec9qy20x0o2vz1dbagfx0ez3lmh].[none:Make:nk]'>
            <groupfilter count='[Parameters].[Parameter 1]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([Make])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Make:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0ec9qy20x0o2vz1dbagfx0ez3lmh].[none:customer_income:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:customer_income:nk]' member='&quot;?&quot;' />
              <groupfilter function='member' level='[none:customer_income:nk]' member='&quot;0 - 20000&quot;' />
              <groupfilter function='member' level='[none:customer_income:nk]' member='&quot;20001 - 40000&quot;' />
              <groupfilter function='member' level='[none:customer_income:nk]' member='&quot;40001 - 60000&quot;' />
              <groupfilter function='member' level='[none:customer_income:nk]' member='&quot;60001 - 80000&quot;' />
              <groupfilter function='member' level='[none:customer_income:nk]' member='&quot;80001 - 100000&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0ec9qy20x0o2vz1dbagfx0ez3lmh].[none:purchase_price:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;5001 - 10000&quot;</bucket>
              <bucket>&quot;10001 - 15000&quot;</bucket>
              <bucket>&quot;15001 - 20000&quot;</bucket>
              <bucket>&quot;20001 - 25000&quot;</bucket>
              <bucket>&quot;25001 - 30000&quot;</bucket>
              <bucket>&quot;30001 - 35000&quot;</bucket>
              <bucket>&quot;35001 - 40000&quot;</bucket>
              <bucket>&quot;40001 - 45000&quot;</bucket>
              <bucket>&quot;45001 - 50000&quot;</bucket>
              <bucket>&quot;50001 - 55000&quot;</bucket>
              <bucket>&quot;55001 - 60000&quot;</bucket>
              <bucket>&quot;60001 - 65000&quot;</bucket>
              <bucket>&quot;65001 - 70000&quot;</bucket>
              <bucket>&quot;70001 - 75000&quot;</bucket>
              <bucket>&quot;75001 - 80000&quot;</bucket>
              <bucket>&quot;85001 - 90000&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0ec9qy20x0o2vz1dbagfx0ez3lmh].[none:Make:nk]</column>
            <column>[federated.0ec9qy20x0o2vz1dbagfx0ez3lmh].[none:customer_income:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0ec9qy20x0o2vz1dbagfx0ez3lmh].[none:purchase_price:nk]' value='80' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0ec9qy20x0o2vz1dbagfx0ez3lmh].[cnt:customer_gender:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='color' field='[federated.0ec9qy20x0o2vz1dbagfx0ez3lmh].[cnt:customer_gender:qk]' palette='green_gold_10_0' reverse='true' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='dark' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.0ec9qy20x0o2vz1dbagfx0ez3lmh].[cnt:customer_gender:qk]' />
              <text column='[federated.0ec9qy20x0o2vz1dbagfx0ez3lmh].[cnt:customer_gender:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='false' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0ec9qy20x0o2vz1dbagfx0ez3lmh].[none:customer_gender:nk] / [federated.0ec9qy20x0o2vz1dbagfx0ez3lmh].[none:customer_income:nk])</rows>
        <cols>([federated.0ec9qy20x0o2vz1dbagfx0ez3lmh].[none:Make:nk] / [federated.0ec9qy20x0o2vz1dbagfx0ez3lmh].[none:purchase_price:nk])</cols>
      </table>
      <simple-id uuid='{15C6FF58-C6D4-423D-851A-22F0B01053F8}' />
    </worksheet>
    <worksheet name='Satisfaction'>
      <table>
        <view>
          <datasources>
            <datasource caption='cmdata (carmax)' name='federated.0ec9qy20x0o2vz1dbagfx0ez3lmh' />
          </datasources>
          <datasource-dependencies datasource='federated.0ec9qy20x0o2vz1dbagfx0ez3lmh'>
            <column datatype='string' name='[Make]' role='dimension' type='nominal' />
            <column datatype='string' name='[Satisfaction]' role='dimension' type='nominal' />
            <column-instance column='[Satisfaction]' derivation='Count' name='[cnt:Satisfaction:qk]' pivot='key' type='quantitative' />
            <column caption='Customer Gender' datatype='string' name='[customer_gender]' role='dimension' type='nominal' />
            <column-instance column='[Make]' derivation='None' name='[none:Make:nk]' pivot='key' type='nominal' />
            <column-instance column='[Satisfaction]' derivation='None' name='[none:Satisfaction:nk]' pivot='key' type='nominal' />
            <column-instance column='[customer_gender]' derivation='None' name='[none:customer_gender:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0ec9qy20x0o2vz1dbagfx0ez3lmh].[cnt:Satisfaction:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='color' field='[federated.0ec9qy20x0o2vz1dbagfx0ez3lmh].[cnt:Satisfaction:qk]' palette='green_blue_diverging_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.0ec9qy20x0o2vz1dbagfx0ez3lmh].[cnt:Satisfaction:qk]' />
              <text column='[federated.0ec9qy20x0o2vz1dbagfx0ez3lmh].[cnt:Satisfaction:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='false' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0ec9qy20x0o2vz1dbagfx0ez3lmh].[none:customer_gender:nk] / [federated.0ec9qy20x0o2vz1dbagfx0ez3lmh].[none:Make:nk])</rows>
        <cols>[federated.0ec9qy20x0o2vz1dbagfx0ez3lmh].[none:Satisfaction:nk]</cols>
      </table>
      <simple-id uuid='{74A836AA-5585-418D-A746-80C974CEEE12}' />
    </worksheet>
    <worksheet name='Trade Cars'>
      <table>
        <view>
          <datasources>
            <datasource caption='cmdata (carmax)' name='federated.0ec9qy20x0o2vz1dbagfx0ez3lmh' />
          </datasources>
          <datasource-dependencies datasource='federated.0ec9qy20x0o2vz1dbagfx0ez3lmh'>
            <column caption='Customer Age' datatype='string' name='[customer_age]' role='dimension' type='nominal' />
            <column caption='Customer Gender' datatype='string' name='[customer_gender]' role='dimension' type='nominal' />
            <column-instance column='[customer_age]' derivation='None' name='[none:customer_age:nk]' pivot='key' type='nominal' />
            <column-instance column='[customer_gender]' derivation='None' name='[none:customer_gender:nk]' pivot='key' type='nominal' />
            <column caption='Subsequent Purchases' datatype='integer' name='[subsequent_purchases]' role='measure' type='quantitative' />
            <column-instance column='[subsequent_purchases]' derivation='Sum' name='[sum:subsequent_purchases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[trade_in]' derivation='Sum' name='[sum:trade_in:qk]' pivot='key' type='quantitative' />
            <column caption='Trade In' datatype='integer' name='[trade_in]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ec9qy20x0o2vz1dbagfx0ez3lmh].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ec9qy20x0o2vz1dbagfx0ez3lmh].[sum:subsequent_purchases:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ec9qy20x0o2vz1dbagfx0ez3lmh].[sum:trade_in:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0ec9qy20x0o2vz1dbagfx0ez3lmh].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ec9qy20x0o2vz1dbagfx0ez3lmh].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0ec9qy20x0o2vz1dbagfx0ez3lmh].[Multiple Values]</rows>
        <cols>([federated.0ec9qy20x0o2vz1dbagfx0ez3lmh].[none:customer_gender:nk] / ([federated.0ec9qy20x0o2vz1dbagfx0ez3lmh].[:Measure Names] / [federated.0ec9qy20x0o2vz1dbagfx0ez3lmh].[none:customer_age:nk]))</cols>
      </table>
      <simple-id uuid='{F69AC411-B225-4233-A5E3-69B553948BE9}' />
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Gender-Age-Income'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ec9qy20x0o2vz1dbagfx0ez3lmh].[none:customer_age:nk]</field>
            <field>[federated.0ec9qy20x0o2vz1dbagfx0ez3lmh].[none:customer_gender:nk]</field>
            <field>[federated.0ec9qy20x0o2vz1dbagfx0ez3lmh].[none:customer_income:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{18F9C10A-9821-4E3C-AFBD-531964D95613}' />
    </window>
    <window class='worksheet' name='Popular Purchases'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ec9qy20x0o2vz1dbagfx0ez3lmh].[none:Make:nk]</field>
            <field>[federated.0ec9qy20x0o2vz1dbagfx0ez3lmh].[none:Model:nk]</field>
            <field>[federated.0ec9qy20x0o2vz1dbagfx0ez3lmh].[none:customer_gender:nk]</field>
            <field>[federated.0ec9qy20x0o2vz1dbagfx0ez3lmh].[none:customer_income:nk]</field>
            <field>[federated.0ec9qy20x0o2vz1dbagfx0ez3lmh].[none:purchase_price:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6043DFA6-0D1B-4744-9E99-29597C64A48F}' />
    </window>
    <window class='worksheet' name='Purchases by income'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0ec9qy20x0o2vz1dbagfx0ez3lmh].[cnt:customer_gender:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0ec9qy20x0o2vz1dbagfx0ez3lmh].[none:Make:nk]</field>
                    <field>[federated.0ec9qy20x0o2vz1dbagfx0ez3lmh].[none:purchase_price:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0ec9qy20x0o2vz1dbagfx0ez3lmh].[none:customer_gender:nk]</field>
                    <field>[federated.0ec9qy20x0o2vz1dbagfx0ez3lmh].[none:customer_income:nk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0ec9qy20x0o2vz1dbagfx0ez3lmh].[cnt:customer_gender:qk]</field>
                  <field>[federated.0ec9qy20x0o2vz1dbagfx0ez3lmh].[none:Make:nk]</field>
                  <field>[federated.0ec9qy20x0o2vz1dbagfx0ez3lmh].[none:customer_gender:nk]</field>
                  <field>[federated.0ec9qy20x0o2vz1dbagfx0ez3lmh].[none:customer_income:nk]</field>
                  <field>[federated.0ec9qy20x0o2vz1dbagfx0ez3lmh].[none:purchase_price:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>94</value>
                <value>&quot;CHEVROLET&quot;</value>
                <value>&quot;U&quot;</value>
                <value>&quot;60001 - 80000&quot;</value>
                <value>&quot;15001 - 20000&quot;</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0ec9qy20x0o2vz1dbagfx0ez3lmh].[cnt:customer_gender:qk]</field>
            <field>[federated.0ec9qy20x0o2vz1dbagfx0ez3lmh].[none:Make:nk]</field>
            <field>[federated.0ec9qy20x0o2vz1dbagfx0ez3lmh].[none:customer_income:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DB66010C-E747-4809-B830-CA16A777185F}' />
    </window>
    <window class='worksheet' maximized='true' name='Satisfaction'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0ec9qy20x0o2vz1dbagfx0ez3lmh].[cnt:Satisfaction:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ec9qy20x0o2vz1dbagfx0ez3lmh].[none:Customer_ID:ok]</field>
            <field>[federated.0ec9qy20x0o2vz1dbagfx0ez3lmh].[none:Make:nk]</field>
            <field>[federated.0ec9qy20x0o2vz1dbagfx0ez3lmh].[none:Model:nk]</field>
            <field>[federated.0ec9qy20x0o2vz1dbagfx0ez3lmh].[none:Model_Year:qk]</field>
            <field>[federated.0ec9qy20x0o2vz1dbagfx0ez3lmh].[none:Satisfaction:nk]</field>
            <field>[federated.0ec9qy20x0o2vz1dbagfx0ez3lmh].[none:customer_age:nk]</field>
            <field>[federated.0ec9qy20x0o2vz1dbagfx0ez3lmh].[none:customer_gender:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{02CDA48F-E56D-4505-807A-AEAD3F708B87}' />
    </window>
    <window class='worksheet' name='Extra purchases'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ec9qy20x0o2vz1dbagfx0ez3lmh].[none:customer_gender:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A27A1EA5-BB54-4841-883F-83F4C13BFB9A}' />
    </window>
    <window class='worksheet' name='Financing'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ec9qy20x0o2vz1dbagfx0ez3lmh].[none:customer_age:nk]</field>
            <field>[federated.0ec9qy20x0o2vz1dbagfx0ez3lmh].[none:customer_income:nk]</field>
            <field>[federated.0ec9qy20x0o2vz1dbagfx0ez3lmh].[none:purchase_price:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DA40B098-A000-45E7-A2E9-4916FBD094DB}' />
    </window>
    <window class='worksheet' name='Trade Cars'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0ec9qy20x0o2vz1dbagfx0ez3lmh].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ec9qy20x0o2vz1dbagfx0ez3lmh].[:Measure Names]</field>
            <field>[federated.0ec9qy20x0o2vz1dbagfx0ez3lmh].[cnt:trade_in:ok]</field>
            <field>[federated.0ec9qy20x0o2vz1dbagfx0ez3lmh].[none:customer_age:nk]</field>
            <field>[federated.0ec9qy20x0o2vz1dbagfx0ez3lmh].[none:customer_gender:nk]</field>
            <field>[federated.0ec9qy20x0o2vz1dbagfx0ez3lmh].[none:dataKey:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D7C418FD-36D8-47DE-947F-721EE83AB845}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Extra purchases' width='192'>
      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
      aC3pblzKQ64AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Financing' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Gender-Age-Income' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Popular Purchases' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Purchases by income' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Satisfaction' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Trade Cars' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
